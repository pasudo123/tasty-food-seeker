task buildVersion {
	// version.properties 파일 생성 : bootJar 태스트 의존성을 가짐
	def file = file "${projectDir}/src/main/resources/version.properties"
	def versionProps = new Properties()
	versionProps.setProperty("version", "${project.name}-${version}")
	file.withWriter {versionProps.store(it, null)}
}

// $ ./gradlew :tasty-food-seeker-web:bootJar
bootJar {
	dependsOn buildVersion
	doLast {
		println "${project.name} bootJar completed"
	}
}

dependencies {
    implementation project(":tasty-food-seeker-domain")

    implementation 'junit:junit:4.12'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// [reactive programming]
	compile 'org.springframework.boot:spring-boot-starter-webflux'

	// [spring cloud client]
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.retry:spring-retry'

	// [starter-jpa 안에 의존성 존재]
	// implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
}

import org.gradle.internal.os.OperatingSystem;

task runNpmDev {
	group "vue"
	description "npm run dev"

	doLast {
		if (OperatingSystem.current().isWindows()) {
			exec {
				workingDir "./frontend"
				commandLine "cmd", "/c", "npm run dev"
			}
		}
	}
}

task buildNpmProd {
	group "vue"

	doLast {
		if (OperatingSystem.current().isWindows()) {
			println "=================================="
			println "==   npm build on vue product   =="
			println "=================================="
			exec {
				workingDir "./frontend"
				commandLine "cmd", "/c", "npm run build"
			}
		}
	}
}